@{
    ViewBag.Title = "Index";
}
<style>
    .form-group .help-block {
        display: none;
    }

    .form-group.has-error .help-block {
        display: block;
    }
</style>
<h2>Index</h2>
<div ng-controller="MemberController">
    <div ng-show="divMemberModification">
        <form name="appForm">
            @*<p ng-model="mahsa"> ID of selected MemberType is : {{MemberTypeID}} </p>*@
            <div class="form-horizontal">
                <h4>{{Operation}} Channel</h4>
                <hr />

                <span class="help-block">{{errormessage}}</span>

                <div class="form-group" show-errors='{showSuccess: true}'>
                    @Html.Label("Member type", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select data-ng-model="MemberTypeID" name="MemberTypeID" ng-options="memtype.MemberTypeID as memtype.MemberTypeDesc for memtype in membertypes" class="form-control" required></select>
                        <p class="help-block" ng-if="appForm.MemberTypeID.$error.required">Member type is requied</p>
                    </div>
                </div>
                <div class="form-group" show-errors='{showSuccess: true}'>
                    @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="UserName" ng-model="UserName" class="form-control" required />
                        <p class="help-block" ng-if="appForm.UserName.$error.required">Username is requied</p>
                    </div>
                </div>
                <div class="form-group" show-errors='{showSuccess: true}'>
                    @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="password" name="Password" ng-model="Password" class="form-control" required />
                        <p class="help-block" ng-if="appForm.Password.$error.required">Password is requied</p>
                    </div>
                </div>
                <div class="form-group" ng-show="showRepassword">
                    @Html.Label("Confirm password", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="password" ng-model="RePassword" class="form-control" />
                    </div>
                </div>
                <div class="form-group" show-errors='{showSuccess: true}'>
                    @Html.Label("Member name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="MemberName" ng-model="MemberName" class="form-control" required />
                        <p class="help-block" ng-if="appForm.MemberName.$error.required">Member name is requied</p>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" ng-model="Email" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <textarea ng-model="Address" maxlength="250" class="form-control"></textarea>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Phone", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="tel" ng-model="Phone" class="form-control" />
                    </div>
                </div> 
                <input type="text" style="width:20px;" ng-model="MemberID" class="hidden" />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Save" ng-click="Save()" class="btn btn-default" />
                        <input type="button" value="Cancel" ng-click="Cancel()" class="btn" />
                    </div>
                </div>
            </div>
        </form>

    </div>
    <div ng-show="divGrid">
        <input type="button" value="New member" ng-click="add()" class="btn" />
        @*<div class="form-group">
                @Html.Label("Filter:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" value="MemberName" ng-model="FilterByMemberName" class="form-control" />
                </div>
            </div>*@
        <table st-table="displayedCollection" st-safe-src="rowCollection" class="table">
            <thead>
                <tr>
                    <th st-sort="UserName"><b>User Name</b></th>
                    <th st-sort="MemberName"><b>Member Name</b></th>
                    <th st-sort="MemberTypeDesc"><b>Member type</b></th>
                    <td><b>Operation</b></td>
                </tr>
            </thead>
            <tbody>
                @*<tr ng-repeat="member in members | filter:FilterByMemberName">*@
                <tr ng-repeat="row in displayedCollection">
                    <td>
                        {{row.UserName}}
                    </td>
                    <td>
                        {{row.MemberName}}
                    </td>
                    <td>
                        {{row.MemberTypeDesc}}
                    </td>
                    <td>
                        <button type="button" ng-click="edit(row)" class="btn btn-sm ">
                            <i class="glyphicon glyphicon-edit">
                            </i>
                        </button>
                        <button type="button" ng-click="delete(row)" class="btn btn-sm ">
                            <i class="glyphicon glyphicon-edit glyphicon-remove-circle">
                            </i>
                        </button>
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="5" class="text-center">
                        <div st-pagination="" st-items-by-page="itemsByPage"></div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
@*@model IEnumerable<MVCDreambox.Models.Member>

    @{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @using (Html.BeginForm())
    {
        <p>
            Select Department: @Html.DropDownList("SelectedDepartment", "All")
            <input type="submit" value="Filter" />
        </p>
    }

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MemberName)
            </th>
            <th>
                Member type
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MemberName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.memberType.MemberTypeDesc)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.MemberID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.MemberID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.MemberID })
                </td>
            </tr>
        }

    </table>*@
@*<table>
        <tr>

            <th>
                @Html.DisplayName("User name")
            </th>
            <th>
                @Html.DisplayName("Member name")
            </th>
            <th>
                @Html.DisplayName("Email")
            </th>
            <th>
                @Html.DisplayName("Phone")
            </th>
            <th>
                @Html.DisplayName("Expiry date")
            </th>
            <th>
                @Html.DisplayName("Member type")
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.member.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.member.MemberName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.member.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.member.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.member.ExpiryDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.membertype.MemberTypeDesc)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.member.MemberID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.member.MemberID })
                </td>
            </tr>
        }

    </table>*@
