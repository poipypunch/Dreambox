@model List<MVCDreambox.Models.Category>
@{
    ViewBag.Title = "Category";
}
<style>
    /*Here We will add some css for style our treeview*/
    .MVCcollapse {
        width: 15px;
        background-image: url('../Images/ui-icons_454545_256x240.png');
        background-repeat: no-repeat;
        background-position: -36px -17px;
        display: inline-block;
        cursor: pointer;
    }

    .MVCexpand {
        width: 15px;
        background-image: url('../Images/ui-icons_454545_256x240.png');
        background-repeat: no-repeat;
        background-position: -50px -17px;
        display: inline-block;
        cursor: pointer;
    }

    .MVCtreeview ul {
        font: 14px Arial, Sans-Serif;
        margin: 0px;
        padding-left: 20px;
        list-style: none;
    }

    .MVCtreeview > li > a {
        font-weight: bold;
    }

    .MVCtreeview li {
    }

        .MVCtreeview li a {
            padding: 4px;
            font-size: 12px;
            display: inline-block;
            text-decoration: none;
            width: auto;
        }
</style>
<h2>Simple Treeview from Database Data</h2>
<div>
    <table style=" width:100%">
        <tr>
            <td valign="top" style=" width:30%; border-right:solid 1px black; padding:10px; ">
                <div class="MVCtreeview">
                    @if (Model != null && Model.Count() > 0)
                    {
                        <ul>
                            @Treeview.GetTreeView(Model, Model.FirstOrDefault().ParentID)
                        </ul>
                    }
                </div>
            </td>
            <td style="padding-left:10px;"><div id="viewPlaceHolder"></div></td>
        </tr>
    </table>
</div>

@* Here We need some Jquery code for make this treeview collapsible *@
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".MVCtreeview li>ul").css('display', 'none'); // Hide all 2-level ul
            $(".MVCcollapsible").click(function (e) {
                e.preventDefault();
                $(this).toggleClass("MVCcollapse MVCexpand");
                $(this).closest('li').children('ul').slideToggle();
            });
        });
    </script>
    <script>

        function LoadPartialView(parentid) {
            $("#viewPlaceHolder").load("/Category/PatialCreate",
             { ParentID: parentid, viewName: "Create" });
        }

    </script>
}

@*@model IEnumerable<MVCDreambox.Models.Category>

    @{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CategoryDesc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImgPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParentID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DealerID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateDate)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryDesc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImgPath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DealerID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreateDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdateDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.CategoryID }) |
                @Html.ActionLink("Details", "Details", new { id=item.CategoryID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.CategoryID })
            </td>
        </tr>
    }

    </table>*@
