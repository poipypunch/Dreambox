@model MVCDreambox.Models.Payment

    @{
        ViewBag.Title = "Edit";
    }

    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>PaymentDummy</legend>

            @Html.HiddenFor(model => model.PaymentID)

            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PaymentName)
                @Html.ValidationMessageFor(model => model.PaymentName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentTotalDay)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PaymentTotalDay)
                @Html.ValidationMessageFor(model => model.PaymentTotalDay)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentCost)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PaymentCost)
                @Html.ValidationMessageFor(model => model.PaymentCost)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ExpiryDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ExpiryDate)
                @Html.ValidationMessageFor(model => model.ExpiryDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.PaymentStatus)
            </div>
            <div class="editor-field">
                @Html.RadioButtonFor(model => model.PaymentStatus, "Active") Active
                @Html.RadioButtonFor(model => model.PaymentStatus, "InUsed") InUsed
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.CreateBy)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CreateBy)
                @Html.ValidationMessageFor(model => model.CreateBy)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.CreateDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.CreateDate)
                @Html.ValidationMessageFor(model => model.CreateDate)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.UpdateBy)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UpdateBy)
                @Html.ValidationMessageFor(model => model.UpdateBy)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.UpdateDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UpdateDate)
                @Html.ValidationMessageFor(model => model.UpdateDate)
            </div>
            <p>
                <input type="submit" value="Save" />
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
