@model MVCDreambox.Models.Package

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Package</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PackageID)

        <div class="form-group">
            @Html.LabelFor(model => model.PackageDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackageDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PackageDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackageStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.PackageStatus, "Active", new { @checked = true, @class = "text-danger" }) Active
                @Html.RadioButtonFor(model => model.PackageStatus, "InActive", new { @class = "text-danger" }) InActive
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            List<MVCDreambox.ViewModels.MappingChannelToPackage> courses = ViewBag.Channels;
                            foreach (var course in courses)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                   @: </tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                            name="selectedChannels"
                                            value="@course.ChannelID"
                                            @(Html.Raw(course.Mapping ? "checked=\"checked\"" : "")) />
                                    @:  @course.ChannelDesc
                                @:</td>
                              }
                          @:</tr>
                        }
                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}
@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Package</legend>

        @Html.HiddenFor(model => model.PackageID)

        <div class="editor-label">
            @Html.LabelFor(model => model.PackageDesc)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PackageDesc)
            @Html.ValidationMessageFor(model => model.PackageDesc)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PackageStatus)
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.PackageStatus, "Active") Active
            @Html.RadioButtonFor(model => model.PackageStatus, "InActive") InActive
        </div>       
        <div class="editor-field">
            @Html.HiddenFor(model => model.CreateBy)
        </div>       
        <div class="editor-field">
            @Html.HiddenFor(model => model.CreateDate)
        </div>       

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
